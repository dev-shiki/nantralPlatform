name: SambaNova SonarQube Quality Analysis

on:
  # Jalankan pada pull request
  pull_request:
    branches: [ main, master ]
  # Memungkinkan pemicu manual dari tab Actions
  workflow_dispatch:

jobs:
  changes:
    name: Check changed files
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
  
  backend-analysis:
    name: Backend SonarQube Analysis
    needs: changes
    # Jalankan jika ada perubahan backend atau ini adalah pemicu manual
    if: ${{ needs.changes.outputs.backend == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Dibutuhkan untuk mendapatkan semua commit history untuk SonarQube
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: backend/.python-version
          cache: pipenv
          cache-dependency-path: backend/Pipfile.lock
      
      - name: Install dependencies
        run: |
          curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
          pipenv verify
          pipenv sync --dev
      
      - name: Run linter (if available)
        run: |
          if pipenv run lint &>/dev/null; then
            pipenv run lint
          else
            echo "Linter command not found, skipping..."
          fi
        continue-on-error: true
      
      - name: Run tests with coverage
        run: |
          if pipenv run test:coverage &>/dev/null; then
            pipenv run test:coverage
            pipenv run coverage xml
          else
            echo "Specific test command not found, using pytest directly..."
            pipenv run pytest --cov=. --cov-report=xml:coverage.xml
          fi
      
      - name: SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  frontend-analysis:
    name: Frontend SonarQube Analysis
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: frontend/.nvmrc
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests with coverage
        run: |
          if npm run jest -- --coverage; then
            echo "Tests completed successfully"
          else
            echo "Tests failed or not found, continuing anyway"
          fi
        continue-on-error: true
      
      - name: SonarQube Scan for Frontend
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}