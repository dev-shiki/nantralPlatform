name: Quality Test

on:
  # Jalankan manual dari GitHub UI
  workflow_dispatch:
  # Jalankan pada setiap push ke branch feature
  push:
    branches:
      - 'feature/**'
      - 'fix/**'

jobs:
  backend-quality:
    name: Backend Quality Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend  # Sesuai struktur nantralPlatform

    steps:
      - name: Pull latest commit
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Dibutuhkan untuk SonarQube

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version-file: backend/.python-version
          cache: pipenv
          cache-dependency-path: backend/Pipfile.lock

      - name: Install dependencies
        run: |
          curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
          pipenv verify
          pipenv sync --dev

      - name: Linter
        run: |
          pipenv run lint

      - name: Run tests and collect coverage
        run: |
          pipenv run test:coverage
          pipenv run coverage xml

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        with:
          projectBaseDir: backend
          args: >
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
            -Dsonar.projectName=${{ github.repository_owner }}_${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Export test results
        run: |
          mkdir -p ../test-results
          if [ -f ".coverage" ]; then
            cp .coverage ../test-results/
          fi
          if [ -f "coverage.xml" ]; then
            cp coverage.xml ../test-results/
          fi

  frontend-quality:
    name: Frontend Quality Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend  # Sesuai struktur nantralPlatform

    steps:
      - name: Clone the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Dibutuhkan untuk SonarQube

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: frontend/.nvmrc
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Types test
        run: npm run types

      - name: Lint test
        run: npm run lint

      - name: Unit test
        run: npm run jest -- --coverage

      - name: Run SonarQube scan
        uses: SonarSource/sonarqube-scan-action@master
        with:
          projectBaseDir: frontend/
          args: >
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}_frontend
            -Dsonar.projectName=${{ github.repository_owner }}_${{ github.event.repository.name }}_frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  summary:
    name: Quality Summary
    needs: [backend-quality, frontend-quality]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Create summary report
        run: |
          echo "## Hasil Analisis Kualitas Kode" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.backend-quality.result }}" == "success" ]]; then
            echo "✅ Backend test berhasil" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Backend test gagal" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.frontend-quality.result }}" == "success" ]]; then
            echo "✅ Frontend test berhasil" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Frontend test gagal" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Hasil lengkap tersedia di SonarQube." >> $GITHUB_STEP_SUMMARY